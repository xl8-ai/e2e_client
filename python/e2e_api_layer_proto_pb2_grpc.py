# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from e2e_pipe.api import e2e_api_layer_proto_pb2 as e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2


class E2eApiServiceStub(object):
    """A service that Speech-to-Speech API layer will serve.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitE2e = channel.unary_unary(
                '/e2e_pipe.api.E2eApiService/InitE2e',
                request_serializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiInitRequest.SerializeToString,
                response_deserializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiInitResponse.FromString,
                )
        self.TransE2e = channel.unary_unary(
                '/e2e_pipe.api.E2eApiService/TransE2e',
                request_serializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiTransRequest.SerializeToString,
                response_deserializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiTransResponse.FromString,
                )
        self.CloseE2e = channel.unary_unary(
                '/e2e_pipe.api.E2eApiService/CloseE2e',
                request_serializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiCloseRequest.SerializeToString,
                response_deserializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiCloseResponse.FromString,
                )


class E2eApiServiceServicer(object):
    """A service that Speech-to-Speech API layer will serve.
    """

    def InitE2e(self, request, context):
        """Initialize the API service.
        TODO: Uncomment the following for gRPC-gateway support.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransE2e(self, request, context):
        """Process a translation request.
        TODO: Uncomment the following for gRPC-gateway support.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseE2e(self, request, context):
        """Close the API service.
        TODO: Uncomment the following for gRPC-gateway support.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_E2eApiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitE2e': grpc.unary_unary_rpc_method_handler(
                    servicer.InitE2e,
                    request_deserializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiInitRequest.FromString,
                    response_serializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiInitResponse.SerializeToString,
            ),
            'TransE2e': grpc.unary_unary_rpc_method_handler(
                    servicer.TransE2e,
                    request_deserializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiTransRequest.FromString,
                    response_serializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiTransResponse.SerializeToString,
            ),
            'CloseE2e': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseE2e,
                    request_deserializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiCloseRequest.FromString,
                    response_serializer=e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiCloseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'e2e_pipe.api.E2eApiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class E2eApiService(object):
    """A service that Speech-to-Speech API layer will serve.
    """

    @staticmethod
    def InitE2e(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/e2e_pipe.api.E2eApiService/InitE2e',
            e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiInitRequest.SerializeToString,
            e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiInitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransE2e(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/e2e_pipe.api.E2eApiService/TransE2e',
            e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiTransRequest.SerializeToString,
            e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiTransResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseE2e(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/e2e_pipe.api.E2eApiService/CloseE2e',
            e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiCloseRequest.SerializeToString,
            e2e__pipe_dot_api_dot_e2e__api__layer__proto__pb2.E2eApiCloseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
